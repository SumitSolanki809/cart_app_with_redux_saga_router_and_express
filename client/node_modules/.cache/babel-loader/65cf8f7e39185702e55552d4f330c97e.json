{"ast":null,"code":"import * as actions from '../actions/itemActions';\nimport SetItemsToStoreRecord from '../records/itemsRecords';\nexport const setItemsToStoreReducer = (state = new SetItemsToStoreRecord(), action) => {\n  switch (action.type) {\n    case actions.SET_ITEMS_TO_STORE:\n      return state.merge({\n        items: action.payload\n      });\n\n    case actions.UPDATE_ITEM:\n      return state.merge({\n        selectedItems: state.selectedItems.concat(action.payload)\n      });\n\n    case actions.REMOVE_ITEM_FROM_LIST:\n      return state.merge({\n        selectedItems: state.selectedItems.filter(item => item !== action.payload)\n      });\n\n    case actions.UPDATE_NUMBER_OF_ITEMS:\n      //console.log(state.selectedItems)\n      return state.merge({\n        numberOfItems: action.payload\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/sumit.kumar/projects/myapp/src/reducers/itemsReducer.js"],"names":["actions","SetItemsToStoreRecord","setItemsToStoreReducer","state","action","type","SET_ITEMS_TO_STORE","merge","items","payload","UPDATE_ITEM","selectedItems","concat","REMOVE_ITEM_FROM_LIST","filter","item","UPDATE_NUMBER_OF_ITEMS","numberOfItems"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,wBAAzB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AAEA,OAAO,MAAMC,sBAAsB,GAAG,CAACC,KAAK,GAAG,IAAIF,qBAAJ,EAAT,EAAsCG,MAAtC,KAAiD;AACnF,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKL,OAAO,CAACM,kBAAb;AACI,aAAOH,KAAK,CAACI,KAAN,CAAY;AAAEC,QAAAA,KAAK,EAAEJ,MAAM,CAACK;AAAhB,OAAZ,CAAP;;AACJ,SAAKT,OAAO,CAACU,WAAb;AACI,aAAOP,KAAK,CAACI,KAAN,CAAY;AAAEI,QAAAA,aAAa,EAAER,KAAK,CAACQ,aAAN,CAAoBC,MAApB,CAA2BR,MAAM,CAACK,OAAlC;AAAjB,OAAZ,CAAP;;AACJ,SAAKT,OAAO,CAACa,qBAAb;AACI,aAAOV,KAAK,CAACI,KAAN,CAAY;AACfI,QAAAA,aAAa,EAAER,KAAK,CAACQ,aAAN,CAAoBG,MAApB,CAA2BC,IAAI,IAAIA,IAAI,KAAKX,MAAM,CAACK,OAAnD;AADA,OAAZ,CAAP;;AAGJ,SAAKT,OAAO,CAACgB,sBAAb;AACI;AACA,aAAOb,KAAK,CAACI,KAAN,CAAY;AAAEU,QAAAA,aAAa,EAAEb,MAAM,CAACK;AAAxB,OAAZ,CAAP;;AACJ;AACI,aAAON,KAAP;AAbR;AAeH,CAhBM","sourcesContent":["import * as actions from '../actions/itemActions'\nimport SetItemsToStoreRecord from '../records/itemsRecords'\n\nexport const setItemsToStoreReducer = (state = new SetItemsToStoreRecord(), action) => {\n    switch(action.type) {\n        case actions.SET_ITEMS_TO_STORE:\n            return state.merge({ items: action.payload })\n        case actions.UPDATE_ITEM:\n            return state.merge({ selectedItems: state.selectedItems.concat(action.payload) })\n        case actions.REMOVE_ITEM_FROM_LIST:\n            return state.merge({\n                selectedItems: state.selectedItems.filter(item => item !== action.payload)\n            })\n        case actions.UPDATE_NUMBER_OF_ITEMS:\n            //console.log(state.selectedItems)\n            return state.merge({ numberOfItems: action.payload })\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}